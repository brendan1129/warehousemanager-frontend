// api.ts
import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";

export type Company = {
    companyName: string;
    companyDescription: string;
}
// Define your API endpoints here
export const companyApi = createApi({
  reducerPath: "companyApi",
  baseQuery: fetchBaseQuery({ 
    baseUrl: "http://localhost:8080/api" 
  }),
  tagTypes: ["company"], // Adjust the base URL to your API endpoint
  endpoints: (builder) => ({
    // Define your endpoints here
    // Example endpoint:
    getAllCompanies: builder.query<Company[], void>({
        query: () => "/companies",
        providesTags: ["company"]
    }),
    addCompany: builder.mutation<void, Company>({
        query: (company) => ({
            method: "POST",
            url: "/companies",
            body: company,
        }),
        invalidatesTags: ["company"],
    }),
    deleteCompany: builder.mutation<void, String>({
        query: (name) => ({
          method: "DELETE",
          url: `/companies/${name}`
        }),
        invalidatesTags: ["company"],
      }),
  }),
});

// Export hooks generated by RTK Query
export const { 
    useGetAllCompaniesQuery,
    useAddCompanyMutation,
    useDeleteCompanyMutation
} = companyApi;
